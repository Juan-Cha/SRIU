//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SRIU.WebForm.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReporteIncidencia", Namespace="http://schemas.datacontract.org/2004/07/SRIU.Models")]
    [System.SerializableAttribute()]
    public partial class ReporteIncidencia : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoZonaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EstatusAtendidoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaReporteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdReporteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LatitudField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LongitudField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PresupuestoEstimadoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodigoZona {
            get {
                return this.CodigoZonaField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoZonaField, value) != true)) {
                    this.CodigoZonaField = value;
                    this.RaisePropertyChanged("CodigoZona");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EstatusAtendido {
            get {
                return this.EstatusAtendidoField;
            }
            set {
                if ((this.EstatusAtendidoField.Equals(value) != true)) {
                    this.EstatusAtendidoField = value;
                    this.RaisePropertyChanged("EstatusAtendido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaReporte {
            get {
                return this.FechaReporteField;
            }
            set {
                if ((this.FechaReporteField.Equals(value) != true)) {
                    this.FechaReporteField = value;
                    this.RaisePropertyChanged("FechaReporte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdReporte {
            get {
                return this.IdReporteField;
            }
            set {
                if ((this.IdReporteField.Equals(value) != true)) {
                    this.IdReporteField = value;
                    this.RaisePropertyChanged("IdReporte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Latitud {
            get {
                return this.LatitudField;
            }
            set {
                if ((this.LatitudField.Equals(value) != true)) {
                    this.LatitudField = value;
                    this.RaisePropertyChanged("Latitud");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Longitud {
            get {
                return this.LongitudField;
            }
            set {
                if ((this.LongitudField.Equals(value) != true)) {
                    this.LongitudField = value;
                    this.RaisePropertyChanged("Longitud");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PresupuestoEstimado {
            get {
                return this.PresupuestoEstimadoField;
            }
            set {
                if ((this.PresupuestoEstimadoField.Equals(value) != true)) {
                    this.PresupuestoEstimadoField = value;
                    this.RaisePropertyChanged("PresupuestoEstimado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IReporteIncidenciaWCF")]
    public interface IReporteIncidenciaWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporteIncidenciaWCF/DoWork", ReplyAction="http://tempuri.org/IReporteIncidenciaWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporteIncidenciaWCF/DoWork", ReplyAction="http://tempuri.org/IReporteIncidenciaWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporteIncidenciaWCF/ObtenerReportes", ReplyAction="http://tempuri.org/IReporteIncidenciaWCF/ObtenerReportesResponse")]
        SRIU.WebForm.ServiceReference1.ReporteIncidencia[] ObtenerReportes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporteIncidenciaWCF/ObtenerReportes", ReplyAction="http://tempuri.org/IReporteIncidenciaWCF/ObtenerReportesResponse")]
        System.Threading.Tasks.Task<SRIU.WebForm.ServiceReference1.ReporteIncidencia[]> ObtenerReportesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporteIncidenciaWCF/CrearReporte", ReplyAction="http://tempuri.org/IReporteIncidenciaWCF/CrearReporteResponse")]
        bool CrearReporte(SRIU.WebForm.ServiceReference1.ReporteIncidencia reporte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporteIncidenciaWCF/CrearReporte", ReplyAction="http://tempuri.org/IReporteIncidenciaWCF/CrearReporteResponse")]
        System.Threading.Tasks.Task<bool> CrearReporteAsync(SRIU.WebForm.ServiceReference1.ReporteIncidencia reporte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporteIncidenciaWCF/ActualizarEstatus", ReplyAction="http://tempuri.org/IReporteIncidenciaWCF/ActualizarEstatusResponse")]
        bool ActualizarEstatus(int idReporte, bool atendido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporteIncidenciaWCF/ActualizarEstatus", ReplyAction="http://tempuri.org/IReporteIncidenciaWCF/ActualizarEstatusResponse")]
        System.Threading.Tasks.Task<bool> ActualizarEstatusAsync(int idReporte, bool atendido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporteIncidenciaWCF/EliminarReporte", ReplyAction="http://tempuri.org/IReporteIncidenciaWCF/EliminarReporteResponse")]
        bool EliminarReporte(int idReporte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporteIncidenciaWCF/EliminarReporte", ReplyAction="http://tempuri.org/IReporteIncidenciaWCF/EliminarReporteResponse")]
        System.Threading.Tasks.Task<bool> EliminarReporteAsync(int idReporte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporteIncidenciaWCF/ObtenerPorId", ReplyAction="http://tempuri.org/IReporteIncidenciaWCF/ObtenerPorIdResponse")]
        SRIU.WebForm.ServiceReference1.ReporteIncidencia ObtenerPorId(int idReporte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporteIncidenciaWCF/ObtenerPorId", ReplyAction="http://tempuri.org/IReporteIncidenciaWCF/ObtenerPorIdResponse")]
        System.Threading.Tasks.Task<SRIU.WebForm.ServiceReference1.ReporteIncidencia> ObtenerPorIdAsync(int idReporte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporteIncidenciaWCF/ActualizarReporte", ReplyAction="http://tempuri.org/IReporteIncidenciaWCF/ActualizarReporteResponse")]
        bool ActualizarReporte(SRIU.WebForm.ServiceReference1.ReporteIncidencia reporte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporteIncidenciaWCF/ActualizarReporte", ReplyAction="http://tempuri.org/IReporteIncidenciaWCF/ActualizarReporteResponse")]
        System.Threading.Tasks.Task<bool> ActualizarReporteAsync(SRIU.WebForm.ServiceReference1.ReporteIncidencia reporte);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReporteIncidenciaWCFChannel : SRIU.WebForm.ServiceReference1.IReporteIncidenciaWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReporteIncidenciaWCFClient : System.ServiceModel.ClientBase<SRIU.WebForm.ServiceReference1.IReporteIncidenciaWCF>, SRIU.WebForm.ServiceReference1.IReporteIncidenciaWCF {
        
        public ReporteIncidenciaWCFClient() {
        }
        
        public ReporteIncidenciaWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReporteIncidenciaWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReporteIncidenciaWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReporteIncidenciaWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public SRIU.WebForm.ServiceReference1.ReporteIncidencia[] ObtenerReportes() {
            return base.Channel.ObtenerReportes();
        }
        
        public System.Threading.Tasks.Task<SRIU.WebForm.ServiceReference1.ReporteIncidencia[]> ObtenerReportesAsync() {
            return base.Channel.ObtenerReportesAsync();
        }
        
        public bool CrearReporte(SRIU.WebForm.ServiceReference1.ReporteIncidencia reporte) {
            return base.Channel.CrearReporte(reporte);
        }
        
        public System.Threading.Tasks.Task<bool> CrearReporteAsync(SRIU.WebForm.ServiceReference1.ReporteIncidencia reporte) {
            return base.Channel.CrearReporteAsync(reporte);
        }
        
        public bool ActualizarEstatus(int idReporte, bool atendido) {
            return base.Channel.ActualizarEstatus(idReporte, atendido);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarEstatusAsync(int idReporte, bool atendido) {
            return base.Channel.ActualizarEstatusAsync(idReporte, atendido);
        }
        
        public bool EliminarReporte(int idReporte) {
            return base.Channel.EliminarReporte(idReporte);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarReporteAsync(int idReporte) {
            return base.Channel.EliminarReporteAsync(idReporte);
        }
        
        public SRIU.WebForm.ServiceReference1.ReporteIncidencia ObtenerPorId(int idReporte) {
            return base.Channel.ObtenerPorId(idReporte);
        }
        
        public System.Threading.Tasks.Task<SRIU.WebForm.ServiceReference1.ReporteIncidencia> ObtenerPorIdAsync(int idReporte) {
            return base.Channel.ObtenerPorIdAsync(idReporte);
        }
        
        public bool ActualizarReporte(SRIU.WebForm.ServiceReference1.ReporteIncidencia reporte) {
            return base.Channel.ActualizarReporte(reporte);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarReporteAsync(SRIU.WebForm.ServiceReference1.ReporteIncidencia reporte) {
            return base.Channel.ActualizarReporteAsync(reporte);
        }
    }
}
